name: spack-build-cache
on:
  push:
    branches:
      - master

jobs:
  spack-build-cache:
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "gcc",
            version: "10",
            os: "ubuntu-22.04",
            mpi: "mpich",
          }
        - {
            name: "gcc",
            version: "11",
            os: "ubuntu-22.04",
            mpi: "mpich",
          }
        - {
            name: "gcc",
            version: "12",
            os: "ubuntu-22.04",
            mpi: "mpich",
          }
        - {
            name: "gcc",
            version: "12",
            os: "ubuntu-24.04",
            mpi: "mpich",
          }
        - {
            name: "gcc",
            version: "13",
            os: "ubuntu-24.04",
            mpi: "mpich",
          }
        - {
            name: "gcc",
            version: "14",
            os: "ubuntu-24.04",
            mpi: "mpich",
          }
        - {
            name: "intel",
            version: "2023.2.1",
            os: "ubuntu-22.04",
            mpi: "intel-oneapi-mpi",
            mpi-version: "2021.14",
          }
        - {
            name: "intel",
            version: "2023.2.1",
            os: "ubuntu-24.04",
            mpi: "intel-oneapi-mpi",
            mpi-version: "2021.14",
          }
        - {
            name: "oneapi",
            version: "2025.0",
            os: "ubuntu-22.04",
            mpi: "intel-oneapi-mpi",
            mpi-version: "2021.14",
          }
        - {
            name: "oneapi",
            version: "2025.0",
            os: "ubuntu-24.04",
            mpi: "intel-oneapi-mpi",
            mpi-version: "2021.14",
          }
    runs-on: ${{ matrix.config.os }}
    permissions:
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Get Spack"
        uses: spack/setup-spack@v2.1.1
      - name: "Get Intel"
        uses: NOAA-EMC/ci-install-intel-toolkit@develop
        if: ${{ matrix.config.name == 'intel' || matrix.config.name == 'oneapi' }}
        with:
          install-classic: ${{ matrix.config.name == 'intel' }}
          classic-version: ${{ matrix.config.version }}
          install-oneapi: ${{ matrix.config.name == 'oneapi' }}
          oneapi-version: ${{ matrix.config.version }}
          install-mpi: true
          mpi-version: ${{ matrix.config.mpi-version }}
          compiler-setup: ${{ matrix.config.name }}
      - name: "Build and cache packages"
        shell: spack-bash {0}
        env:
          OCI_USERNAME: ${{ github.repository_owner }}
          OCI_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set up mirror for build caching:
          spack mirror add spack-build-cache oci://ghcr.io/$OCI_USERNAME/ci-playground
          spack mirror set --push --oci-username-variable OCI_USERNAME --oci-password-variable OCI_TOKEN spack-build-cache
          COMPILER="${{ matrix.config.name }}@${{ matrix.config.version }}"
          # Activate environment and set up compilers:
          spack env activate .
          if [ ${{ matrix.config.name }} == 'gcc' ]; then
            sudo apt install gcc-${{ matrix.config.version }} g++-${{ matrix.config.version }} gfortran-${{ matrix.config.version }}
          elif [ ${{ matrix.config.name }} == 'oneapi' ]; then
            spack compiler find /opt/intel/oneapi/compiler/${{ matrix.config.version }}/linux
          elif [ ${{ matrix.config.name }} == 'intel' ]; then
            intelversion=$(spack compiler find /opt/intel/oneapi/compiler/${{ matrix.config.version }}/linux/bin/intel64/ | grep -oP "intel@\K[\d\.]+")
            sed 's|environment: {}|environment:\n        prepend_path: {LD_LIBRARY_PATH: /opt/intel/oneapi/compiler/${{ matrix.config.version }}/linux/compiler/lib/intel64_lin}|' -i spack.yaml
            COMPILER=intel@$intelversion
          fi
          spack config add "packages:all:prefer:['%$COMPILER']"
          if [ ${{ matrix.config.os  }} == 'ubuntu-24.04' ]; then
            spack config add "packages:cmake:require:'%gcc@13'"
          fi
          # MPI setup. Always use external to avoid a mess of dependencies.
          # This means that users of any cached MPI-based packages must have
          # the appropriate MPI library installed in their own workflow via apt.
          spack config add "packages:mpi:require:'${{ matrix.config.mpi }}'"
          if [ ${{ matrix.config.mpi }} == intel-oneapi-mpi ]; then
            sed -i "s|^  packages:|  packages:\n    intel-oneapi-mpi:\n      buildable: false\n      externals:\n      - spec: intel-oneapi-mpi@${{ matrix.config.mpi-version }}\n        prefix: /opt/intel/oneapi|" spack.yaml
            spack config add "packages:mpi:buildable:false"
          fi
          # Find externals, including MPI:
          sudo mv /usr/local /usr/local_mv
          spack external find --all --exclude intel --exclude oneapi --exclude clang --exclude llvm --exclude llvm-doe --exclude curl
          cat spack.yaml
          # Build-n-cache:
          spack concretize --fresh |& tee log.concretize
          spack install --no-check-signature --show-log-on-error || true
          spack buildcache push --update-index spack-build-cache
